h2
  | Internationalisation
p
  | Localisation of the presentation layer is important for any software package, and I aim to make this normally arduous task as easy as possible in DataTables. To this end, a number of contributors have kindly translated the language strings used is DataTables into various different languages. If you translate DataTables into any other languages, please 
  a[href="/contact"]
    | let me know
  |  and I'll happily include the translation here.
ul
  li
    a[href="#how_to"]
      | How to use DataTables internalisation options
  li
    a[href="#functions"]
      | Translations
a[name="how_to"]
h3
  | How to use DataTables internalisation options
p
  | There are two methods by which you can include internalisation options in DataTables - loading the language file through an Ajax request, or at initialisation time using the 
  a[href="/usage/i18n"]
    | oLanguage
  |  property. The following example shows how to include the 
  a[href="#German"]
    | German translation
  |  as an Ajax file (
  a[href="/examples/advanced_init/language_file.html"]
    | live example
  |  - a 
  a[href="/examples/basic_init/language.html"]
    | live example
  |  for oLanguage control is also available):
pre.brush:.html
  | <script type="text/javascript" src="jquery.dataTables.js"></script> <script type="text/javascript"> $(document).ready(function() { $('#example').dataTable( { "oLanguage": { "sUrl": "dataTables.german.txt" } } ); } ); </script> 
a[name="functions"]
h3
  | Translations
|  include(`build.1.inc') 
